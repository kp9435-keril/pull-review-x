name: "PullReviewX"
description: "A smart Github Action that utilizes Azure OpenAI API to review pull requests, identify potential issues, and provide actionable feedback"
branding:
  icon: "compass"
  color: "orange"
inputs:
  GITHUB_AUTH_TOKEN:
    description: "Token for using GitHub REST API"
    default: ${{ github.token }}
    required: true
  AZURE_OPENAI_APIKEY:
    description: "Azure OpenAI API Key"
    required: true
  AZURE_OPENAI_ENDPOINT:
    description: "Azure OpenAI Endpoint"
    required: true
  AZURE_OPENAI_API_VERSION:
    description: "Azure OpenAI API Version"
    required: true
  AZURE_OPENAI_MODEL:
    description: "Azure OpenAI Model"
    required: true
  PR_SUMMARY:
    description: "Whether allow workflow to analyze PR and provide summary in comment."
    required: false
  PR_SUGGEST_CHANGES:
    description: "Whether allow workflow to analyze PR & suggest changes in comment, if required."
    required: false
  PR_COMMENT_SUGGESTED_CHANGES:
    description: "Whether allow workflow to drop review comment in the patch for the suggested changes."
    required: false
runs:
  using: "composite"
  steps:
      - name: Set up Python 3.13
        uses: actions/setup-python@v5.4.0
        with:
           python-version: "3.13"
      - name: Show Working Directory
        shell: bash
        run: |
          pwd
          ls
      # Validation Logic as currently GitHub does not check if required input has been passed. This is being tracked in this https://github.com/actions/runner/issues/1070.
      - name: Validate Required Inputs
        shell: bash
        run: |
          [[ "${{ inputs.GITHUB_AUTH_TOKEN }}" ]] || { echo "GITHUB_AUTH_TOKEN input is empty" ; exit 1; }
          [[ "${{ inputs.AZURE_OPENAI_APIKEY }}" ]] || { echo "AZURE_OPENAI_APIKEY input is empty" ; exit 1; }
          [[ "${{ inputs.AZURE_OPENAI_ENDPOINT }}" ]] || { echo "AZURE_OPENAI_ENDPOINT input is empty" ; exit 1; }
          [[ "${{ inputs.AZURE_OPENAI_MODEL }}" ]] || { echo "AZURE_OPENAI_MODEL input is empty" ; exit 1; }
      - name: Set Up Env
        shell: bash
        env:
           GITHUB_ACTION_PATH: ${{ github.action_path }}
        run: | 
          set -x
          pwd
          echo "$GITHUB_ACTION_PATH" >> $GITHUB_PATH
          cd "$GITHUB_ACTION_PATH"
          python -m pip install --upgrade pip
          python -m venv env
          chmod +x env/bin/activate
          source ./env/bin/activate
          pwd
          ls
          pip list -v
          pip install -r requirements.txt
          pip list
      - name: Review Pull Request
        shell: bash
        env:
          REPO: ${{ github.repository }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
          GITHUB_ACTION_PATH: ${{ github.action_path }}
          EVENT: ${{ toJson(github.event) }}
          GITHUB_AUTH_TOKEN: ${{ inputs.GITHUB_AUTH_TOKEN }}
          AZURE_OPENAI_APIKEY: ${{ inputs.AZURE_OPENAI_APIKEY }}
          AZURE_OPENAI_ENDPOINT: ${{ inputs.AZURE_OPENAI_ENDPOINT }}
          AZURE_OPENAI_MODEL : ${{ inputs.AZURE_OPENAI_MODEL }}
          PR_SUMMARY: ${{ inputs.PR_SUMMARY }}
          PR_SUGGEST_CHANGES: ${{ inputs.PR_SUGGEST_CHANGES }}
          PR_COMMENT_SUGGESTED_CHANGES: ${{ inputs.PR_COMMENT_SUGGESTED_CHANGES }}
        run: |
          set -x
          pwd
          ls -a
          cd "$GITHUB_ACTION_PATH"
          pwd
          ls
          source env/bin/activate
          echo pr number: "$PR_NUMBER"
          echo pr repo: "$REPO"
          python -m src